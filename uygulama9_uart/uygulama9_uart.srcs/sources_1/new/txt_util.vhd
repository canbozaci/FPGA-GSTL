library ieee;
use ieee.std_logic_1164.all;
use std.textio.all;
package txt_util is
function convert_slv_to_char(slv: std_logic_vector) return character;
end txt_util;
package body txt_util is
function convert_slv_to_char(slv: std_logic_vector) return character is
variable c: character;
begin
case slv is
when "00100000" => c := ' ';
when "00100001" => c := '!';
when "00100010" => c := '"';
when "00100011" => c := '#';
when "00100100" => c := '$';
when "00100101" => c := '%';
when "00100110" => c := '&';
when "00100111" => c := ''';
when "00101000" => c := '(';
when "00101001" => c := ')';
when "00101010" => c := '*';
when "00101011" => c := '+';
when "00101100" => c := ',';
when "00101101" => c := '-';
when "00101110" => c := '.';
when "00101111" => c := '/';
when "00110000" => c := '0';
when "00110001" => c := '1';
when "00110010" => c := '2';
when "00110011" => c := '3';
when "00110100" => c := '4';
when "00110101" => c := '5';
when "00110110" => c := '6';
when "00110111" => c := '7';
when "00111000" => c := '8';
when "00111001" => c := '9';
when "00111010" => c := ':';
when "00111011" => c := ';';
when "00111100" => c := '<';
when "00111101" => c := '=';
when "00111110" => c := '>';
when "00111111" => c := '?';
when "01000000" => c := '@';
when "01000001" => c := 'A';
when "01000010" => c := 'B';
when "01000011" => c := 'C';
when "01000100" => c := 'D';
when "01000101" => c := 'E';
when "01000110" => c := 'F';
when "01000111" => c := 'G';
when "01001000" => c := 'H';
when "01001001" => c := 'I';
when "01001010" => c := 'J';
when "01001011" => c := 'K';
when "01001100" => c := 'L';
when "01001101" => c := 'M';
when "01001110" => c := 'N';
when "01001111" => c := 'O';
when "01010000" => c := 'P';
when "01010001" => c := 'Q';
when "01010010" => c := 'R';
when "01010011" => c := 'S';
when "01010100" => c := 'T';
when "01010101" => c := 'U';
when "01010110" => c := 'V';
when "01010111" => c := 'W';
when "01011000" => c := 'X';
when "01011001" => c := 'Y';
when "01011010" => c := 'Z';
when "01011011" => c := '[';
when "01011100" => c := '\';
when "01011101" => c := ']';
when "01011110" => c := '^';
when "01011111" => c := '_';
when "01100000" => c := '`';
when "01100001" => c := 'a';
when "01100010" => c := 'b';
when "01100011" => c := 'c';
when "01100100" => c := 'd';
when "01100101" => c := 'e';
when "01100110" => c := 'f';
when "01100111" => c := 'g';
when "01101000" => c := 'h';
when "01101001" => c := 'i';
when "01101010" => c := 'j';
when "01101011" => c := 'k';
when "01101100" => c := 'l';
when "01101101" => c := 'm';
when "01101110" => c := 'n';
when "01101111" => c := 'o';
when "01110000" => c := 'p';
when "01110001" => c := 'q';
when "01110010" => c := 'r';
when "01110011" => c := 's';
when "01110100" => c := 't';
when "01110101" => c := 'u';
when "01110110" => c := 'v';
when "01110111" => c := 'w';
when "01111000" => c := 'x';
when "01111001" => c := 'y';
when "01111010" => c := 'z';
when "01111011" => c := '{';
when "01111100" => c := '|';
when "01111101" => c := '}';
when "01111110" => c := '~';
when others => c := '?';
end case;
return c;
end convert_slv_to_char;
end txt_util;